#########################################################
#                                                       #
#   ██████╗  █████╗ ███████╗██╗  ██╗██████╗  ██████╗    #
#   ██╔══██╗██╔══██╗██╔════╝██║  ██║██╔══██╗██╔════╝    #
#   ██████╔╝███████║███████╗███████║██████╔╝██║         #
#   ██╔══██╗██╔══██║╚════██║██╔══██║██╔══██╗██║         #
#   ██████╔╝██║  ██║███████║██║  ██║██║  ██║╚██████╗    #
#   ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝    #
#                                                       #
#########################################################

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Start tmux
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  exec tmux
fi

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoredups:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	    color_prompt=yes
    else
	    color_prompt=
    fi
fi

# set Prompt
if [ "$color_prompt" = yes ]; then
    reset=$(tput sgr0)
    bold=$(tput bold)
    red=$(tput setaf 1)
    green=$(tput setaf 2)
    yellow=$(tput setaf 3)
    blue=$(tput setaf 4)
    cyan=$(tput setaf 6)
    PROMPT_COMMAND=_prompt_command_color
else
    PROMPT_COMMAND=_prompt_command
fi

_prompt_command_color() {
        local EXIT="$?"
        PS1="${reset}"
        if [ $EXIT -gt 0 ]; then
            PS1+="${bold}${red}\$(printf %03d $EXIT)${reset} "
        else
            PS1+="${bold}${green}\$(printf %03d $EXIT)${reset} "
        fi
        PS1+="${bold}${cyan}[\w]${reset} \$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\
${bold}${blue}git:(${reset}${bold}${yellow}\1${reset}${bold}${blue})${reset} /')"
        if [ $EXIT -gt 0 ]; then
            PS1+=$'${bold}${red}\xE2\x9e\xA1${reset} '
        else
            PS1+=$'${bold}${green}\xE2\x9e\xA1${reset} '
        fi
}

_prompt_command() {
    local EXIT="$?"
    PS1=""
    PS1+="\$(printf %03d $EXIT) "
    PS1+="\$? [\w] git:\$(git branch 2> /dev/null\
| sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/') \$ \[$(tput sgr0)\]"
}

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
